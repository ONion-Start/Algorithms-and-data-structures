#include <iostream>
#include <vector>

using namespace std;

vector<long> kolkomnaku;
vector<long> dp;
vector<long> correctpath;


int n;

int main() {
    cin >> n;
    kolkomnaku.resize(n);
    dp.resize(n);
    for (int i = 0; i < n; ++i) {
        cin >> kolkomnaku[i];
    }
    if (n == 2 || n == 0) {
        cout << -1;
        return 0;
    }
    if (n == 1) {
        cout << kolkomnaku[0]<<"\n";
        cout << 1;
        return 0;
    }
    dp[0] = kolkomnaku[0];

    dp[1] = -1;
    for (int i = 2; i < n; ++i) {
        if (i == 2) {
            dp[2] = kolkomnaku[i] + dp[0];
            continue;
        }
        if (dp[i - 2] > dp[i - 3]) {
            dp[i] = dp[i - 2] + kolkomnaku[i];
        }
        else {
            dp[i] = dp[i - 3] + kolkomnaku[i];
        }
    }
    cout << dp[n - 1];

    correctpath.push_back(n);
    for (int i = n - 1; i != 0;) {

        if ((dp[i] - kolkomnaku[i]) == dp[i - 2]) {
            correctpath.push_back(i - 1);
            i -= 2;
        }
        else {
            correctpath.push_back(i - 2);
            i -= 3;
        }
    }

    reverse(correctpath.begin(), correctpath.end());
    correctpath[0] = 1;
    cout << "\n";
    for (const int& i : correctpath) {
        cout << i << " ";
    }
    return 0;
}
